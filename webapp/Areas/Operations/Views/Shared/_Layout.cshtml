@{
    var successMsg = TempData["SuccessMsg"] != null ? TempData["SuccessMsg"].ToString() : "";
    var errorMsg = TempData["ErrorMsg"] != null ? TempData["ErrorMsg"].ToString() : "";
}

@functions{
    bool IsCurrentArea(string a)
    {
        var area = ViewContext.RouteData.DataTokens["area"].ToString();
        return string.Compare(a, area, true) == 0;
    }
    bool IsCurrentController(string c)
    {
        var controller = ViewContext.RouteData.GetRequiredString("controller");
        return string.Compare(c, controller, true) == 0;
    }
    bool IsCurrentAction(string c, string a)
    {
        var action = ViewContext.RouteData.GetRequiredString("controller") + ViewContext.RouteData.GetRequiredString("action");
        return string.Compare(c + a, action, true) == 0;
    }
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <title>@ViewBag.Title - @AppSettings.GetVal("app:BrowserTitle")</title>
    <link rel="shortcut icon" href="~/appfavicon.ico" type="image/x-icon">

    @if (User.Identity.IsAuthenticated)
    {
        if (string.IsNullOrEmpty(CurrentUser.Theme))
        {
            <link rel="stylesheet" href="~/Content/Bootstrap/bootstrap-LumenTheme.css" />
        }
        else
        {
            <link rel="stylesheet" href="~/Content/Bootstrap/bootstrap-@(CurrentUser.Theme)Theme.css" />
        }
    }
    else
    {
        <link rel="stylesheet" href="~/Content/Bootstrap/bootstrap-LumenTheme.css" />
    }

    @Styles.Render("~/Content/BaseApp")
    @Styles.Render("~/Content/CustomBaseApp")
    <link href="~/Content/operations.css" rel="stylesheet" />
    @Scripts.Render("~/bundles/modernizr")
    @RenderSection("styles", required: false)
</head>
<body>
    <div id="notifyMe" class="notifications bottom-right"></div>
    <div id="loading-mask"><img src="~/Content/Images/loader.gif" alt="Loading" /></div>


    @if (IsCurrentController("Account"))
    {
        if (IsCurrentAction("Account", "Login"))
        {
            <div class="row">
                <div class="col-md-12">
                    @RenderBody()
                </div>
            </div>
        }
        else
        {
            { Html.RenderPartial("~/Areas/Operations/Views/Shared/_Header.cshtml"); }

            <div class="row">
                <div class="col-md-12 no-padding">
                    @RenderBody()
                    <div></div>
                </div>
            </div>
        }
    }

    

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/Bootstrap")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/BaseApp")



    @RenderSection("scripts", required: false)

    @Scripts.Render("~/bundles/CustomBaseApp")


    <!-- SignalR -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.0.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--Add script to update the page and send messages.-->
    <script src="~/Scripts/SignalR Functions/BaseApp.js"></script>
    <!-- End SignalR -->

    <script type="text/javascript">
        @if (!string.IsNullOrEmpty(successMsg))
        {
            <text>
            $('#notifyMe').notify({
                message: { text: '@successMsg' },
                transition: 'fade',
                type: 'success'
            }).show();
            </text>
        }
        @if (!string.IsNullOrEmpty(errorMsg))
        {
            <text>
            $('#notifyMe').notify({
                message: { text: '@errorMsg' },
                transition: 'fade',
                type: 'danger'
            }).show();
            </text>
        }


        @if (IsCurrentController("Account"))
        {
            if (!IsCurrentAction("Account", "Login"))
            {
                <text>
                //--- Server Time
                var currenttime = '@DateTime.Now.ToString("MMM dd, yyyy H:mm:ss")';
                var montharray = new Array("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December");
                var serverdate = new Date(currenttime);
                function padlength(what) { var output = (what.toString().length == 1) ? "0" + what : what; return output; };
                function displaytime() {
                    serverdate.setSeconds(serverdate.getSeconds() + 1)
                    var datestring = montharray[serverdate.getMonth()] + " " + serverdate.getDate() + ", " + serverdate.getFullYear()

                    if (padlength(serverdate.getHours()) >= 12) {
                        makehourtime = padlength(serverdate.getHours()) - 12;
                        merid = 'PM';
                    }
                    else {
                        makehourtime = padlength(serverdate.getHours());
                        merid = 'AM';
                    }
                    if (makehourtime == 0) makehourtime = 12;

                    var timestring = makehourtime + ":" + padlength(serverdate.getMinutes()) + ":" + padlength(serverdate.getSeconds()) + " " + merid;
                    document.getElementById("servertime").innerHTML = datestring + " " + timestring;
                    document.getElementById("servertime-mobile").innerHTML = datestring + " " + timestring;
                    document.getElementById("currentTime").innerHTML = datestring + " " + timestring;
                }
                setInterval("displaytime()", 1000);
                //---
                </text>
            }
        }


    </script>
</body>
</html>